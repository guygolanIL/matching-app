generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  password     String?
  longitude    Float    @default(0) @db.DoublePrecision
  latitude     Float    @default(0) @db.DoublePrecision
  registeredAt DateTime @default(now())

  userClassifications UserClassification[] @relation("classifications")
  classifiedBy        UserClassification[] @relation("classifiedBy")
  userProfile         UserProfile?

  initiatedMatches Match[]   @relation(name: "initiatedMatches")
  createdMatches   Match[]   @relation(name: "createdMatches")
  messages         Message[]
}

model Match {
  id               Int @id @default(autoincrement())
  creatingUserId   Int
  initiatingUserId Int

  createdAt DateTime @default(now())

  creatingUser   User      @relation(name: "createdMatches", fields: [creatingUserId], references: [id])
  initiatingUser User      @relation(name: "initiatedMatches", fields: [initiatingUserId], references: [id])
  messages       Message[]

  @@unique([creatingUserId, initiatingUserId])
}

model Message {
  id              Int      @id @default(autoincrement())
  createdByUserId Int
  matchId         Int
  content         String
  createdAt       DateTime @default(now())

  createdBy User  @relation(fields: [createdByUserId], references: [id])
  match     Match @relation(fields: [matchId], references: [id])
}

model UserProfile {
  id               Int              @id @default(autoincrement())
  user             User             @relation(fields: [userId], references: [id])
  userId           Int              @unique
  name             String?
  onboardingStatus OnboardingStatus @default(INITIAL)

  profileImage ProfileImage?
}

enum OnboardingStatus {
  INITIAL
  IN_PROGRESS
  COMPLETED
}

enum ImageType {
  png
  jpeg
}

model ProfileImage {
  id            Int       @id @default(autoincrement())
  type          ImageType
  url           String
  userProfileId Int       @unique

  userProfile UserProfile @relation(fields: [userProfileId], references: [id])
}

enum Attitude {
  POSITIVE
  NEGATIVE
}

model UserClassification {
  attitude Attitude @default(POSITIVE)

  classifierUserId Int
  classifiedUserId Int

  classifierUser User @relation("classifications", fields: [classifierUserId], references: [id])
  classifiedUser User @relation("classifiedBy", fields: [classifiedUserId], references: [id])

  @@id([classifierUserId, classifiedUserId])
}
